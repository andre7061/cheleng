// Задача — попробовать сделать свою реализацию данной функции:

// На вход функция должна принимать список объектов (пример
// users = [ {name: ‘Ivan’ age: 30}, {name: ‘Alisa’ age: 25}, {name: ‘Anton’, age: 48}])

// На выходе должен быть такой этот же массив, но отсортированный по указанному признаку. К примеру, sortBy(users, ‘age’) должна возвращать массив пользователей, отсортированных по возрасту
const users = [
  { name: "Ivan", age: 30 },
  { name: "Alisa", age: 25 },
  { name: "Anton", age: 48 },
];

function sortBy(arr, key) {
  // Проверяем, существует ли ключ в первом элементе массива
  if (arr.length === 0 || !(key in arr[0])) {
    // Если массив пуст или ключ не существует, выбрасываем ошибку
    throw new Error(`Key "${key}" does not exist in the array elements.`);
  }
  // Используем метод sort для сортировки массива arr
  return arr.sort((a, b) => {
    // Сравниваем значения по указанному ключу key для двух элементов a и b
    if (a[key] < b[key]) {
      // Если значение a[key] меньше, чем b[key], возвращаем -1
      // Это означает, что a должно быть перед b в отсортированном массиве
      return -1;
    }
    if (a[key] > b[key]) {
      // Если значение a[key] больше, чем b[key], возвращаем 1
      // Это означает, что b должно быть перед a в отсортированном массиве
      return 1;
    }
    // Если значения равны, возвращаем undefined (по умолчанию)
    // Это означает, что порядок a и b не изменится
  });
}

sortBy(users, "age");
console.log(users);
sortBy(users, "name");
console.log(users);
